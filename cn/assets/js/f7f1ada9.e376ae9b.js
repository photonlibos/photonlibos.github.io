"use strict";(self.webpackChunkphoton_website=self.webpackChunkphoton_website||[]).push([[8653],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>v});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var a=r.createContext({}),p=function(e){var t=r.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(a.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,a=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=p(n),k=i,v=d["".concat(a,".").concat(k)]||d[k]||u[k]||o;return n?r.createElement(v,l(l({ref:t},s),{},{components:n})):r.createElement(v,l({ref:t},s))}));function v(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,l=new Array(o);l[0]=k;var c={};for(var a in t)hasOwnProperty.call(t,a)&&(c[a]=t[a]);c.originalType=e,c[d]="string"==typeof e?e:i,l[1]=c;for(var p=2;p<o;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},8970:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var r=n(7462),i=(n(7294),n(3905));const o={sidebar_position:6,toc_max_heading_level:4},l="\u7f51\u7edc",c={unversionedId:"api/network",id:"api/network",title:"\u7f51\u7edc",description:"\u547d\u540d\u7a7a\u95f4",source:"@site/i18n/cn/docusaurus-plugin-content-docs/current/api/network.md",sourceDirName:"api",slug:"/api/network",permalink:"/cn/docs/api/network",draft:!1,editUrl:"https://github.com/alibaba/PhotonLibOS/edit/main/doc/docs/api/network.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,toc_max_heading_level:4},sidebar:"docSidebar",previous:{title:"\u6587\u4ef6\u7cfb\u7edf\u548cIO",permalink:"/cn/docs/api/filesystem-and-io"},next:{title:"std\u517c\u5bb9API",permalink:"/cn/docs/api/std-compatible-api"}},a={},p=[{value:"\u547d\u540d\u7a7a\u95f4",id:"\u547d\u540d\u7a7a\u95f4",level:3},{value:"\u5934\u6587\u4ef6",id:"\u5934\u6587\u4ef6",level:3},{value:"Socket\u5c01\u88c5",id:"socket\u5c01\u88c5",level:3},{value:"\u6982\u8ff0",id:"\u6982\u8ff0",level:4},{value:"ISocketClient",id:"isocketclient",level:4},{value:"ISocketServer",id:"isocketserver",level:4},{value:"ISocketStream",id:"isocketstream",level:4},{value:"Socket\u7c7b\u7684\u7ee7\u627f\u5173\u7cfb",id:"socket\u7c7b\u7684\u7ee7\u627f\u5173\u7cfb",level:4},{value:"Socket\u5b9e\u73b0",id:"socket\u5b9e\u73b0",level:3},{value:"\u901a\u7528TCP",id:"\u901a\u7528tcp",level:4},{value:"UDS",id:"uds",level:4},{value:"io_uring",id:"io_uring",level:4},{value:"zerocopy",id:"zerocopy",level:4},{value:"Edge-Trigger",id:"edge-trigger",level:4},{value:"SMC",id:"smc",level:4},{value:"F-Stack + DPDK",id:"f-stack--dpdk",level:4},{value:"\u7f51\u7edc\u5730\u5740",id:"\u7f51\u7edc\u5730\u5740",level:3},{value:"IPAddr",id:"ipaddr",level:4},{value:"Endpoint",id:"endpoint",level:4},{value:"HTTP",id:"http",level:3},{value:"libcurl",id:"libcurl",level:4},{value:"\u521d\u59cb\u5316",id:"\u521d\u59cb\u5316",level:5},{value:"\u5934\u6587\u4ef6",id:"\u5934\u6587\u4ef6-1",level:5},{value:"\u4f7f\u7528",id:"\u4f7f\u7528",level:5},{value:"\u5c01\u88c5",id:"\u5c01\u88c5",level:5},{value:"Photon HTTP",id:"photon-http",level:4},{value:"\u5934\u6587\u4ef6",id:"\u5934\u6587\u4ef6-2",level:5},{value:"\u4f7f\u7528",id:"\u4f7f\u7528-1",level:5},{value:"\u5c01\u88c5",id:"\u5c01\u88c5-1",level:5}],s={toc:p},d="wrapper";function u(e){let{components:t,...o}=e;return(0,i.kt)(d,(0,r.Z)({},s,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"\u7f51\u7edc"},"\u7f51\u7edc"),(0,i.kt)("h3",{id:"\u547d\u540d\u7a7a\u95f4"},"\u547d\u540d\u7a7a\u95f4"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"photon::net::")),(0,i.kt)("h3",{id:"\u5934\u6587\u4ef6"},"\u5934\u6587\u4ef6"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"<photon/net/socket.h>")),(0,i.kt)("h3",{id:"socket\u5c01\u88c5"},"Socket\u5c01\u88c5"),(0,i.kt)("h4",{id:"\u6982\u8ff0"},"\u6982\u8ff0"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Photon\u628aSocket\u62bd\u8c61\u6210",(0,i.kt)("inlineCode",{parentName:"li"},"ISocketClient"),"\uff0c",(0,i.kt)("inlineCode",{parentName:"li"},"ISocketServer"),"\uff0c\u4ee5\u53ca",(0,i.kt)("inlineCode",{parentName:"li"},"ISocketStream"),"\u4e09\u4e2a\u63a5\u53e3"),(0,i.kt)("li",{parentName:"ul"},"Photon Socket\u540c\u65f6\u652f\u6301IPv4\u548cIPv6"),(0,i.kt)("li",{parentName:"ul"},"\u6240\u6709\u7684Socket\u5b9e\u73b0\u90fd\u662f\u975e\u963b\u585e\u7684")),(0,i.kt)("h4",{id:"isocketclient"},"ISocketClient"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ISocketClient"),"\u53ea\u6709connect\u65b9\u6cd5\uff0c\u4f46\u53ef\u4ee5\u8fde\u63a5\u591a\u79cd\u534f\u8bae\uff0c\u5982TCP\u3001UDP\u3001Unix Domain Socket\u7b49\u3002 ")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"class ISocketClient : public ISocketBase, public Object {\npublic:\n    // Connect to a remote endpoint.\n    // If `local` endpoint is not empty, its address will be bind to the socket before connecting to the `remote`.\n    virtual ISocketStream* connect(const EndPoint& remote, const EndPoint* local = nullptr) = 0;\n    // Connect to a Unix Domain Socket.\n    virtual ISocketStream* connect(const char* path, size_t count = 0) = 0;\n};\n")),(0,i.kt)("h4",{id:"isocketserver"},"ISocketServer"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ISocketServer"),"\u6709\u4e00\u7cfb\u5217\u7684bind\u3001listen\u3001accept\u7b49\u65b9\u6cd5\uff0c\u4ee5\u53ca\u542f\u52a8loop\u548c\u7ec8\u6b62loop\u7684\u65b9\u6cd5\u3002\u5b83\u901a\u8fc7\u8bbe\u7f6e\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u6765\u6307\u5b9a\u6240\u6709\u8fde\u63a5\uff08ISocketStream\uff09\u7684\u5904\u7406\u5165\u53e3\u3002"),(0,i.kt)("li",{parentName:"ul"},"accept\u6210\u529f\u4f1a\u8fd4\u56de\u4e00\u4e2a",(0,i.kt)("inlineCode",{parentName:"li"},"ISocketStream"),"\u6307\u9488\uff1b\u56de\u8c03\u51fd\u6570\u7684\u552f\u4e00\u53c2\u6570\u4e5f\u662f\u8fd9\u4e2a\u6307\u9488\u3002")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"class ISocketServer : public ISocketBase, public ISocketName, public Object {\npublic:\n    virtual int bind(const EndPoint& ep) = 0;\n    virtual int bind(const char* path, size_t count) = 0;\n    int bind(uint16_t port, IPAddr a);\n    // ...\n\n    virtual int listen(int backlog = 1024) = 0;\n    virtual ISocketStream* accept(EndPoint* remote_endpoint = nullptr) = 0;\n\n    using Handler = Callback<ISocketStream*>;\n    virtual ISocketServer* set_handler(Handler handler) = 0;\n    virtual int start_loop(bool block = false) = 0;\n    \n    // Close the listening fd. It's the user's responsibility to close the active connections.\n    virtual void terminate() = 0;\n};\n")),(0,i.kt)("h4",{id:"isocketstream"},"ISocketStream"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"ISocketStream"),"\u6709\u4e24\u7ec4\u63a5\u53e3\uff0c\u4e00\u7ec4send/recv\uff0c\u53e6\u4e00\u7ec4read/write\u3002")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u524d\u8005\u7b49\u4ef7\u4e8elibc\u5728non-blocking fd\u6761\u4ef6\u4e0b\u7684send/recv\uff0c\u5373\u6536\u53d1\u7684\u5b57\u8282\u6570\u53ef\u80fd\u5c0f\u4e8e\u6307\u5b9a\u7684count\u6570\u91cf\uff1b\u800c\u540e\u8005\u5bf9\u524d\u8005\u505a\u4e86\u5c01\u88c5\uff0c\n\u8981\u6c42\u6536\u53d1\u6570\u91cf\u7b49\u4e8ecount\u624d\u80fd\u591f\u8fd4\u56de\u3002\u56e0\u6b64\u4ece\u672c\u8d28\u4e0a\u6765\u8bf4\uff0cread \u7b49\u4ef7\u4e8e fully recv\uff0cwrite \u7b49\u4ef7\u4e8e fully send\u3002")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u9664\u6b64\u4ee5\u5916\uff0c\u9488\u5bf9\u6bcf\u7ec4\u63a5\u53e3\u8fd8\u63d0\u4f9b\u4e86\u5bf9\u5e94\u7684 io-vector \u7248\u672c\uff0c\u7b49\u4ef7\u4e8elibc\u7684sendmsg\u548crecvmsg\u3002 "))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"class ISocketStream : public IStream, public ISocketBase, public ISocketName {\npublic:\n    virtual ssize_t recv(void *buf, size_t count, int flags = 0) = 0;\n    virtual ssize_t recv(const struct iovec *iov, int iovcnt, int flags = 0) = 0;\n    \n    virtual ssize_t send(const void *buf, size_t count, int flags = 0) = 0;\n    virtual ssize_t send(const struct iovec *iov, int iovcnt, int flags = 0) = 0;\n    \n    virtual ssize_t read(void *buf, size_t count) = 0;\n    virtual ssize_t readv(const struct iovec *iov, int iovcnt) = 0;\n    \n    virtual ssize_t write(const void *buf, size_t count) = 0;\n    virtual ssize_t writev(const struct iovec *iov, int iovcnt) = 0;\n};\n")),(0,i.kt)("h4",{id:"socket\u7c7b\u7684\u7ee7\u627f\u5173\u7cfb"},"Socket\u7c7b\u7684\u7ee7\u627f\u5173\u7cfb"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"socket",src:n(3110).Z,width:"1920",height:"1080"})),(0,i.kt)("h3",{id:"socket\u5b9e\u73b0"},"Socket\u5b9e\u73b0"),(0,i.kt)("h4",{id:"\u901a\u7528tcp"},"\u901a\u7528TCP"),(0,i.kt)("p",null,"\u8fd9\u662f\u6700\u5e38\u7528\u7684TCP socket\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"ISocketClient* new_tcp_socket_client();\nISocketServer* new_tcp_socket_server();\n")),(0,i.kt)("h4",{id:"uds"},"UDS"),(0,i.kt)("p",null,"UDS server\u7684autoremove\u53c2\u6570\u8868\u793a\u5728\u5173\u95edserver\u65f6\u662f\u5426\u8981\u81ea\u52a8\u5220\u9664UDS\u6587\u4ef6\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"ISocketClient* new_uds_client();\nISocketServer* new_uds_server(bool autoremove = false);\n")),(0,i.kt)("h4",{id:"io_uring"},"io_uring"),(0,i.kt)("p",null,"\u8fd9\u4e00\u7ec4client/server\u4f7f\u7528\u539f\u751f\u7684io_uring\u8bfb\u5199\u63a5\u53e3\uff0c\u800c\u4e0d\u4f7f\u7528libc\u7684send/recv\u3002\u6b64\u5916\uff0c\u5b83\u7684socket fd\u4e5f\u4e0d\u662fnon-blocking\u7684\u3002"),(0,i.kt)("p",null,"\u5728Ping-pong\u7684\u5927\u8fde\u63a5\u5c0f\u6d41\u91cf\u573a\u666f\u5e94\u8be5\u4f18\u5148\u4f7f\u7528io_uring socket\uff0c\u5728Streaming\u7684\u5927\u6d41\u91cf\u573a\u666f\u5e94\u8be5\u4f18\u5148\u4f7f\u7528\u666e\u901aTCP socket\uff0c\u8be6\u60c5\u8bf7\u53c2\u8003\u7f51\u7edc\u6027\u80fd\u6d4b\u8bd5\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"ISocketClient* new_iouring_tcp_client();\nISocketServer* new_iouring_tcp_server();\n")),(0,i.kt)("h4",{id:"zerocopy"},"zerocopy"),(0,i.kt)("p",null,"TCP zerocopy send\u529f\u80fd\uff0c\u4f9d\u8d564.15\u4ee5\u4e0a\u5185\u6838\uff0c\u80fd\u591f\u964d\u4f4eCPU\u8d1f\u8f7d\u3002\u5bf9\u5927\u7684buffer\u6548\u679c\u6bd4\u8f83\u597d\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"ISocketClient* new_zerocopy_tcp_client();\nISocketServer* new_zerocopy_tcp_server();\n")),(0,i.kt)("h4",{id:"edge-trigger"},"Edge-Trigger"),(0,i.kt)("p",null,"\u8fb9\u7f18\u89e6\u53d1\u7684TCP socket\u5b9e\u73b0\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"ISocketClient* new_et_tcp_socket_client();\nISocketServer* new_et_tcp_socket_server();\n")),(0,i.kt)("h4",{id:"smc"},"SMC"),(0,i.kt)("p",null,"\u57fa\u4e8e",(0,i.kt)("a",{parentName:"p",href:"https://www.ibm.com/docs/en/aix/7.2?topic=access-shared-memory-communications-over-rdma-smc-r"},"SMC-R"),"\u534f\u8bae\u7684RDMA\u5b9e\u73b0\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"ISocketClient* new_smc_socket_client();\nISocketServer* new_smc_socket_server();\n")),(0,i.kt)("h4",{id:"f-stack--dpdk"},"F-Stack + DPDK"),(0,i.kt)("p",null,"\u8fd0\u884c\u5728DPDK polling\u6a21\u5f0f\u4e0b\u7684\u534f\u7a0b\uff0c\u5e95\u5c42\u7f51\u7edc\u5e93\u91c7\u7528\u4e86F-Stack\uff08FreeBSD + UserSpace\uff09"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"ISocketClient* new_fstack_dpdk_socket_client();\nISocketServer* new_fstack_dpdk_socket_server();\n")),(0,i.kt)("h3",{id:"\u7f51\u7edc\u5730\u5740"},"\u7f51\u7edc\u5730\u5740"),(0,i.kt)("p",null,"\u7f51\u7edc\u5730\u5740\u4e3b\u8981\u6709 ",(0,i.kt)("inlineCode",{parentName:"p"},"IPAddr")," \u548c ",(0,i.kt)("inlineCode",{parentName:"p"},"Endpoint")," \u4e24\u4e2a\u7c7b\uff0c\u540e\u8005\u7b49\u4e8e\u524d\u8005\u52a0\u4e0a\u7aef\u53e3\u53f7\u3002"),(0,i.kt)("h4",{id:"ipaddr"},"IPAddr"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"struct IPAddr {\n    // For compatibility, the default constructor is 0.0.0.0 (IPv4 Any)\n    IPAddr();\n    // V6 constructor (Internet Address)\n    explicit IPAddr(in6_addr internet_addr);\n    // V6 constructor (Network byte order)\n    IPAddr(uint32_t nl1, uint32_t nl2, uint32_t nl3, uint32_t nl4);\n    // V4 constructor (Internet Address)\n    explicit IPAddr(in_addr internet_addr);\n    // V4 constructor (Network byte order)\n    explicit IPAddr(uint32_t nl);\n    // String constructor\n    explicit IPAddr(const char* s);\n    // Check if it's actually an IPv4 address mapped in IPV6\n    bool is_ipv4();\n    // \u9ed8\u8ba4\u7684\u5730\u5740\u662fIPv4 0.0.0.0\uff0c\u6211\u4eec\u8ba4\u4e3a\u8fd9\u662f\u672a\u5b9a\u4e49\u7684\n    bool undefined();\n    // Should ONLY be used for IPv4 address\n    uint32_t to_nl() const;\n    bool is_loopback() const;\n    bool is_broadcast() const;\n    bool is_link_local() const;\n    \n    static IPAddr V6None();\n    static IPAddr V6Any();\n    static IPAddr V6Loopback();\n    static IPAddr V4Broadcast();\n    static IPAddr V4Any();\n    static IPAddr V4Loopback();\n};\n")),(0,i.kt)("h4",{id:"endpoint"},"Endpoint"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"struct EndPoint {\n    EndPoint() = default;\n    EndPoint(IPAddr ip, uint16_t port) : addr(ip), port(port) {}\n    explicit EndPoint(const char* ep);\n    EndPoint(const char* ip, uint16_t port) : addr(ip), port(port) {}\n    bool is_ipv4() const;\n    // \u9ed8\u8ba4\u7684endpoint\u662f0.0.0.0:0\uff0c\u6211\u4eec\u8ba4\u4e3a\u8fd9\u662f\u672a\u5b9a\u4e49\u7684\n    bool undefined();\n};\n")),(0,i.kt)("admonition",{title:"\u5c0f\u77e5\u8bc6",type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"\u4e00\u4e2a\u76d1\u542c\u4e86 ",(0,i.kt)("inlineCode",{parentName:"p"},"::0")," \u5730\u5740\u7684 server\uff0c\u53ef\u4ee5\u540c\u65f6\u670d\u52a1 v4 \u548c v6 \u534f\u8bae\u7684 client")),(0,i.kt)("h3",{id:"http"},"HTTP"),(0,i.kt)("p",null,"Photon\u6709\u4e24\u4e2aHTTP\u7ec4\u4ef6\uff0c\u4e00\u4e2a\u662f\u57fa\u4e8elibcurl+\u534f\u7a0b\u5c01\u88c5\u7684\u5f02\u6b65\u6846\u67b6\uff08\u53ea\u6709client\u529f\u80fd\uff09\uff0c\u53e6\u4e00\u4e2a\u662f\u81ea\u7814\u7684\u8f7b\u91cf\u5316HTTP client/server\uff08\u4ee5\u4e0b\u7b80\u79f0Photon HTTP\uff09\u3002"),(0,i.kt)("h4",{id:"libcurl"},"libcurl"),(0,i.kt)("h5",{id:"\u521d\u59cb\u5316"},"\u521d\u59cb\u5316"),(0,i.kt)("p",null,"photon::init\u7684\u65f6\u5019\u9700\u8981\u52a0\u4e0alibcurl\u7684IO_ENGINE"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"photon::init(INIT_EVENT_DEFAULT, INIT_IO_LIBCURL);\n")),(0,i.kt)("h5",{id:"\u5934\u6587\u4ef6-1"},"\u5934\u6587\u4ef6"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <photon/net/curl.h>\n")),(0,i.kt)("h5",{id:"\u4f7f\u7528"},"\u4f7f\u7528"),(0,i.kt)("p",null,"\u6bcf\u6b21\u8bf7\u6c42\u90fd\u9700\u8981new\u4e00\u4e2anet::cURL()\u5bf9\u8c61\uff0c\u7136\u540e\u8c03\u7528\u5b83\u7684GET/POST\u7b49\u65b9\u6cd5\u3002"),(0,i.kt)("h5",{id:"\u5c01\u88c5"},"\u5c01\u88c5"),(0,i.kt)("p",null,"\u5728",(0,i.kt)("inlineCode",{parentName:"p"},"<photon/fs/httpfs/httpfs.h>"),"\u4e2d\uff0c\u6211\u4eec\u5c01\u88c5\u4e86\u4e00\u4e2a\u6ee1\u8db3POSIX\u6587\u4ef6\u8bfb\u5199\u63a5\u53e3\u7684fs\uff0c\u5e76\u4e14\u5bf9\u4e8eHTTP header\u3001\u72b6\u6001\u8fd4\u56de\u7801\u7b49\u505a\u4e86\u4e00\u4e9b\u5c01\u88c5\u3002"),(0,i.kt)("h4",{id:"photon-http"},"Photon HTTP"),(0,i.kt)("p",null,"\u81ea\u7814\u7684Photon HTTP\u6846\u67b6\u6ca1\u6709\u7b2c\u4e09\u65b9\u4f9d\u8d56\uff0c\u4e14init\u7684\u65f6\u5019\u4e0d\u9700\u8981\u989d\u5916\u7684IO_ENGINE\u3002"),(0,i.kt)("h5",{id:"\u5934\u6587\u4ef6-2"},"\u5934\u6587\u4ef6"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <photon/net/http/client.h>\n#include <photon/net/http/server.h>\n")),(0,i.kt)("h5",{id:"\u4f7f\u7528-1"},"\u4f7f\u7528"),(0,i.kt)("p",null,"\u8bf7\u53c2\u8003 ",(0,i.kt)("inlineCode",{parentName:"p"},"net/http/test/client_perf.cpp")," \u548c ",(0,i.kt)("inlineCode",{parentName:"p"},"net/http/test/server_perf.cpp")),(0,i.kt)("h5",{id:"\u5c01\u88c5-1"},"\u5c01\u88c5"),(0,i.kt)("p",null,"\u540c\u6837\u7684\uff0c\u6211\u4eec\u5728",(0,i.kt)("inlineCode",{parentName:"p"},"<photon/fs/httpfs/httpfs.h>"),"\u4e5f\u5c01\u88c5\u4e86\u5b83\u7684fs\uff0c\u79f0\u4e3ahttpfs v2\u3002"))}u.isMDXComponent=!0},3110:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/socket-3add167a9a0f106df31ac4fef157278f.png"}}]);