"use strict";(self.webpackChunkphoton_website=self.webpackChunkphoton_website||[]).push([[7384],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=i.createContext({}),s=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=s(e.components);return i.createElement(p.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=s(n),m=r,k=u["".concat(p,".").concat(m)]||u[m]||c[m]||a;return n?i.createElement(k,l(l({ref:t},d),{},{components:n})):i.createElement(k,l({ref:t},d))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[u]="string"==typeof e?e:r,l[1]=o;for(var s=2;s<a;s++)l[s]=n[s];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4948:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>c,frontMatter:()=>a,metadata:()=>o,toc:()=>s});var i=n(7462),r=(n(7294),n(3905));const a={sidebar_position:1,toc_max_heading_level:3},l="Env",o={unversionedId:"api/env",id:"api/env",title:"Env",description:"Concept",source:"@site/docs/api/env.md",sourceDirName:"api",slug:"/api/env",permalink:"/docs/api/env",draft:!1,editUrl:"https://github.com/alibaba/PhotonLibOS/edit/main/doc/docs/api/env.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,toc_max_heading_level:3},sidebar:"docSidebar",previous:{title:"API",permalink:"/docs/category/api"},next:{title:"Thread",permalink:"/docs/api/thread"}},p={},s=[{value:"Concept",id:"concept",level:3},{value:"Namespace",id:"namespace",level:3},{value:"Headers",id:"headers",level:3},{value:"API",id:"api",level:2},{value:"init",id:"init",level:3},{value:"Description",id:"description",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Return",id:"return",level:4},{value:"fini",id:"fini",level:3},{value:"Description",id:"description-1",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Return",id:"return-1",level:4}],d={toc:s},u="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"env"},"Env"),(0,r.kt)("h3",{id:"concept"},"Concept"),(0,r.kt)("p",null,"Photon Env consists of different kinds of engines and a simulated coroutine stack in userspace."),(0,r.kt)("h3",{id:"namespace"},"Namespace"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"photon::")),(0,r.kt)("h3",{id:"headers"},"Headers"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"<photon/photon.h>")),(0,r.kt)("h2",{id:"api"},"API"),(0,r.kt)("h3",{id:"init"},"init"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"int photon::init(uint64_t event_engine = INIT_EVENT_DEFAULT, uint64_t io_engine = INIT_IO_DEFAULT);\n")),(0,r.kt)("h4",{id:"description"},"Description"),(0,r.kt)("p",null,"Initialize the coroutine stack on current ",(0,r.kt)("a",{parentName:"p",href:"vcpu-and-multicore"},"vCPU"),". Next, you can create multiple Photon ",(0,r.kt)("a",{parentName:"p",href:"thread"},"threads")," via ",(0,r.kt)("inlineCode",{parentName:"p"},"thread_create"),", and migrate them to other vCPUs. You should ",(0,r.kt)("strong",{parentName:"p"},"NOT")," invoke blocking function calls from now on."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"event_engine")," is platform independent. It cooperates with the scheduler and decides the way it polls fd and processes events. Usually we would do a non-blocking ",(0,r.kt)("inlineCode",{parentName:"p"},"wait")," for events on a thread, making the caller thread fall to ",(0,r.kt)("inlineCode",{parentName:"p"},"SLEEPING"),". After the events being processed, it's the engine's responsibility to interrupt the caller thread and make it ",(0,r.kt)("inlineCode",{parentName:"p"},"READY"),"."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"io_engine")," will setup ancillary threads running in the background, if necessary."),(0,r.kt)("h4",{id:"parameters"},"Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"event_engine")," Supported types are:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"INIT_EVENT_NONE")," None, only used in test."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"INIT_EVENT_DEFAULT")," It will first try ",(0,r.kt)("inlineCode",{parentName:"li"},"io_uring"),", then choose ",(0,r.kt)("inlineCode",{parentName:"li"},"epoll")," if io_uring failed."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"INIT_EVENT_EPOLL")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"INIT_EVENT_IOURING")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"INIT_EVENT_KQUEUE")," Only avalaible on macOS or FreeBSD."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"io_engine")," Supported types are:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"INIT_IO_NONE")," Don't need any additional IO engines. Just use ",(0,r.kt)("inlineCode",{parentName:"li"},"libc"),"'s read/write, or ",(0,r.kt)("inlineCode",{parentName:"li"},"io_uring"),"'s async IO if its ",(0,r.kt)("inlineCode",{parentName:"li"},"event_engine")," is set."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"INIT_IO_LIBAIO")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"INIT_IO_LIBCURL")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"INIT_IO_SOCKET_EDGE_TRIGGER")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"INIT_IO_EXPORTFS")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"INIT_IO_FSTACK_DPDK"))))),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Running an ",(0,r.kt)("inlineCode",{parentName:"p"},"IOURING")," event engine would need the kernel version to be greater than 5.8.\nWe encourage you to upgrade to the latest kernel so that you could enjoy the extraordinary performance.")),(0,r.kt)("h4",{id:"return"},"Return"),(0,r.kt)("p",null,"Returns 0 on success, returns -1 on error."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"fini"},"fini"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"int photon::fini();\n")),(0,r.kt)("h4",{id:"description-1"},"Description"),(0,r.kt)("p",null,"Destroy and join the ancillary threads of the io engine. Stop the event engine. Deallocate the coroutine stack."),(0,r.kt)("h4",{id:"parameters-1"},"Parameters"),(0,r.kt)("p",null,"None"),(0,r.kt)("h4",{id:"return-1"},"Return"),(0,r.kt)("p",null,"Returns 0 on success, returns -1 on error."))}c.isMDXComponent=!0}}]);